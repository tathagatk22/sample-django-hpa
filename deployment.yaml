apiVersion: apps/v1
kind: Deployment
metadata:
  name: sample-django-deployment
spec:
  replicas: 10
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 30%
  selector:
    matchLabels:
      app: sample-django
  template:
    metadata:
      labels:
        app: sample-django
    spec:
      imagePullSecrets:
        - name: regcred
      containers:
      - image: docker.io/tathagatk22/django-app:1
        name: sample-django
        imagePullPolicy: Always
        ports:
          - name: port
            containerPort: 8000
            protocol: TCP
        envFrom:
          - secretRef:
              name: db-conn-secrets
        livenessProbe:
          httpGet:
            path: /core/health-check
            port: port
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 30
        readinessProbe:
          httpGet:
            path: /core/health-check
            port: port
            scheme: HTTP
          initialDelaySeconds: 180
          periodSeconds: 10
        resources:
          limits:
            cpu: 20m
            memory: 150Mi

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
      - name: postgres
        image: postgres:9.6.5
        ports:
        - containerPort: 5432
        envFrom:
          - secretRef:
              name: db-secrets
        volumeMounts:
        - mountPath: "/var/lib/postgresql/data"
          name: volume
          subPath: postgres
      volumes:
        - name: volume
          persistentVolumeClaim:
            claimName: azure-managed-disk
      nodeSelector:
        apptype: db